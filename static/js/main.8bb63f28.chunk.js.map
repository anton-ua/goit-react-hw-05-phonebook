{"version":3,"sources":["Components/App/App.module.css","Components/AddContact/AddContact.module.css","Transition/TransitionLogo.module.css","Components/Contacts/ContactsList.module.css","Transition/TransitionListItem.module.css","Transition/TransitionFilter.module.css","Components/Alert/Alert.module.css","Transition/TransitionAlert.module.css","Components/AddContact/AddContact.js","Components/Contacts/ContactsList.js","Components/Filter/Filter.js","Components/Alert/Alert.js","Components/App/App.js","index.js"],"names":["module","exports","InitialState","name","number","AddContact","state","isLogo","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","reset","this","CSSTransition","in","classNames","TransitionLogo","timeout","unmountOnExit","onSubmit","type","placeholder","onChange","className","styles","buttonAdd","Component","ContactsList","contacts","TransitionGroup","component","map","id","key","TransitionListItem","onClick","deleteContact","button","Filter","handleFilter","filterValue","TransitionFilter","isFilter","filter","Alert","isAlert","TransitionAlert","alert","App","componentDidMount","a","persistedContacts","localStorage","getItem","JSON","parse","addContact","contact","uuidv4","contactToAdd","toLowerCase","includes","setTimeout","input","filterContacts","prevProps","prevState","setItem","stringify","filteredContacts","container","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bb63f28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3twmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonAdd\":\"AddContact_buttonAdd__2G28W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionLogo_enter__1tqM8\",\"enterActive\":\"TransitionLogo_enterActive__3n2nV\",\"exit\":\"TransitionLogo_exit__LTW0B\",\"exitActive\":\"TransitionLogo_exitActive__1nRB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__3FVYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionListItem_enter__2QprP\",\"enterActive\":\"TransitionListItem_enterActive__3Su1q\",\"exit\":\"TransitionListItem_exit__2Dca_\",\"exitActive\":\"TransitionListItem_exitActive__2Ai0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionFilter_enter__2_ISb\",\"enterActive\":\"TransitionFilter_enterActive__2pAPJ\",\"exit\":\"TransitionFilter_exit__t3lk9\",\"exitActive\":\"TransitionFilter_exitActive__1NwB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__fM2df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionAlert_enter__31LH8\",\"enterActive\":\"TransitionAlert_enterActive__2oR0p\",\"exit\":\"TransitionAlert_exit__39US_\",\"exitActive\":\"TransitionAlert_exitActive__39mzx\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./AddContact.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport TransitionLogo from \"../../Transition/TransitionLogo.module.css\";\n\nconst InitialState = { name: \"\", number: \"\" };\n\nexport default class AddContact extends Component {\n  state = { ...InitialState, isLogo: false };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.name) {\n      return;\n    }\n\n    if (!this.state.number) {\n      return;\n    }\n\n    this.props.onAddContact({ ...this.state });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...InitialState });\n  };\n\n  componentDidMount() {\n    this.setState({ isLogo: true });\n  }\n\n  render() {\n    return (\n      <>\n        <CSSTransition\n          in={this.state.isLogo}\n          classNames={TransitionLogo}\n          timeout={500}\n          unmountOnExit\n        >\n          <h2>Phonebook</h2>\n        </CSSTransition>\n        <form onSubmit={this.handleSubmit}>\n          <label name=\"name\">\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label name=\"number\">\n            Number\n            <input\n              type=\"text\"\n              placeholder=\"Enter phone number\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.buttonAdd} type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport styles from \"./ContactsList.module.css\";\nimport TransitionListItem from \"../../Transition/TransitionListItem.module.css\";\n\nexport default class ContactsList extends Component {\n  render() {\n    const { contacts } = this.props;\n\n    return (\n      <TransitionGroup component=\"ul\">\n        {contacts.map(({ name, number, id }) => (\n          <CSSTransition\n            timeout={250}\n            unmountOnExit\n            key={id}\n            classNames={TransitionListItem}\n          >\n            <li>\n              <p>\n                {name}: <span>{number}</span>\n                <button\n                  type=\"button\"\n                  onClick={() => this.props.deleteContact(id)}\n                  className={styles.button}\n                >\n                  X\n                </button>\n              </p>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport TransitionFilter from \"../../Transition/TransitionFilter.module.css\";\n\nexport default class Filter extends Component {\n  handleFilter = ({ target }) => {\n    const { value } = target;\n\n    this.props.filterValue(value);\n  };\n\n  render() {\n    return (\n      <CSSTransition\n        classNames={TransitionFilter}\n        timeout={250}\n        unmountOnExit\n        in={this.props.isFilter}\n      >\n        <div>\n          <p>Find contact by name:</p>\n          <input\n            placeholder=\"Find...\"\n            value={this.props.filter}\n            onChange={this.handleFilter}\n          />\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nFilter.propTypes = {\n  filterValue: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  isFilter: PropTypes.bool.isRequired,\n};\n","import React, { Component } from \"react\";\nimport styles from \"./Alert.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport TransitionAlert from \"../../Transition/TransitionAlert.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class Alert extends Component {\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.isAlert}\n        timeout={250}\n        unmountOnExit\n        classNames={TransitionAlert}\n      >\n        <div className={styles.alert}>Contact is already exist!</div>\n      </CSSTransition>\n    );\n  }\n}\n\nAlert.propTypes = {\n  isAlert: PropTypes.bool.isRequired,\n};\n","import React, { Component } from \"react\";\nimport styles from \"./App.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport AddContact from \"../AddContact/AddContact\";\nimport ContactsList from \"../Contacts/ContactsList\";\nimport Filter from \"../Filter/Filter\";\nimport Alert from \"../Alert/Alert\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    isAlert: false,\n  };\n\n  componentDidMount = async () => {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    } else {\n      this.setState({\n        contacts: [\n          { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n          { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n          { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n          { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n        ],\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (contact) => {\n    const id = uuidv4();\n    const contactToAdd = { ...contact, id };\n\n    if (\n      this.state.contacts\n        .map(({ name }) => name.toLowerCase())\n        .includes(contact.name.toLowerCase())\n    ) {\n      this.setState({ isAlert: true });\n      setTimeout(() => {\n        this.setState({ isAlert: false });\n      }, 3000);\n    } else {\n      this.setState((state) => ({\n        contacts: [contactToAdd, ...state.contacts],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  filterValue = (input) => {\n    this.setState(() => ({ filter: input }));\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts, filter, isAlert } = this.state;\n\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.container}>\n        <AddContact onAddContact={this.addContact} isAlert={isAlert} />\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          filterValue={this.filterValue}\n          isFilter={contacts.length >= 2}\n        />\n        <ContactsList\n          contacts={filteredContacts}\n          deleteContact={this.deleteContact}\n          addContact={this.addContact}\n        />\n        <Alert isAlert={isAlert} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}